services:
  # Home Assistant

  wyoming-openwakeword:
    image: rhasspy/wyoming-openwakeword
    container_name: wyoming-openwakeword
    restart: unless-stopped
    profiles:
      - homeassistant
      - voice
    ports:
      - 10400:10400
    volumes:
      - ~/homeassistant/addons/wyoming-openwakeword-custom:/custom
    command: >
      --custom-model-dir /custom
      --preload-model 'yo_bitch'
    healthcheck:
      test: ["CMD", "curl", "-f", "http://127.0.0.1:10400"]
      interval: 30s
      timeout: 10s
      retries: 5

  wyoming-satellite:
    build: homeassistant/addons/wyoming-satellite
    container_name: wyoming-satellite
    restart: unless-stopped
    profiles:
      - homeassistant
      - voice
    ports:
      - 10700:10700
    devices:
      - "/dev/snd"
    environment:
      PULSE_SERVER: unix:/tmp/pulse/native
      XDG_RUNTIME_DIR: /tmp/pulse
    volumes:
      - /run/user/1000/pulse/native:/tmp/pulse/native
      - /run/user/1000:/tmp/pulse
      - ~/.config/pulse/cookie:/tmp/pulse/cookie
      - ~/.dots/home/.alerts:/sounds
    depends_on:
      - wyoming-openwakeword
    command: >
      --name "Main Satellite"
      --uri tcp://0.0.0.0:10700
      --mic-command 'parecord --rate=16000 --channels=1 --format=s16le --raw'
      --mic-seconds-to-mute-after-awake-wav 0
      --mic-noise-suppression 1
      --snd-command 'paplay --rate=22050 --channels=1 --format=s16le --raw'
      --snd-command-rate 22050
      --awake-wav /sounds/awake.wav
      --done-wav /sounds/done.wav
      --timer-finished-wav /sounds/timer_finished.wav

  homeassistant:
    container_name: homeassistant
    image: "ghcr.io/home-assistant/home-assistant:stable"
    profiles:
      - homeassistant
    volumes:
      - ~/homeassistant:/config
      - ~/.certs:/certs:ro
      - /etc/localtime:/etc/localtime:ro
      - /run/dbus:/run/dbus:ro
    restart: unless-stopped
    privileged: true
    network_mode: host

  # Multimedia
  ### Use local IP address for the fuckarr apps

  deluge:
    image: lscr.io/linuxserver/deluge:latest
    container_name: deluge
    profiles:
      - multimedia
      - download
    environment:
      - PUID=1000
      - PGID=100
      - TZ=Asia/Manila
    volumes:
      - ~/.config/deluge:/config
      - ~/downloads:/downloads
    ports:
      - 8112:8112
      - 6881:6881
      - 6881:6881/udp
      - 58846:58846 #optional
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://127.0.0.1:8112"]
      interval: 30s
      timeout: 10s
      retries: 5

  flaresolverr:
    image: ghcr.io/flaresolverr/flaresolverr:latest
    container_name: flaresolverr
    profiles:
      - multimedia
      - download
    environment:
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - LOG_HTML=${LOG_HTML:-false}
      - CAPTCHA_SOLVER=${CAPTCHA_SOLVER:-none}
      - TZ=Asia/Manila
    ports:
      - "${PORT:-8191}:8191"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://127.0.0.1:8191"]
      interval: 30s
      timeout: 10s
      retries: 5

  prowlarr:
    image: lscr.io/linuxserver/prowlarr:latest
    container_name: prowlarr
    profiles:
      - multimedia
      - download
    depends_on:
      flaresolverr:
        condition: service_healthy
    environment:
      - PUID=1000
      - PGID=100
      - TZ=Asia/Manila
    volumes:
      - ~/.config/prowlarr:/config
    ports:
      - 9696:9696
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://127.0.0.1:9696"]
      interval: 30s
      timeout: 10s
      retries: 5

  sonarr:
    image: lscr.io/linuxserver/sonarr:latest
    container_name: sonarr
    profiles:
      - multimedia
      - download
    depends_on:
      prowlarr:
        condition: service_healthy
      deluge:
        condition: service_healthy
    environment:
      - PUID=1000
      - PGID=100
      - TZ=Asia/Manila
    volumes:
      - ~/.config/sonarr:/config
      - ~/media/tv:/tv #optional
      - ~/downloads:/downloads
    ports:
      - 8989:8989
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://127.0.0.1:8989"]
      interval: 30s
      timeout: 10s
      retries: 5

  jellyfin:
    image: lscr.io/linuxserver/jellyfin:latest
    container_name: jellyfin
    profiles:
      - multimedia
      - media
    depends_on:
      sonarr:
        condition: service_healthy
    environment:
      - PUID=1000
      - PGID=100
      - TZ=Asia/Manila
      - JELLYFIN_PublishedServerUrl=http://homestation.local #optional
    volumes:
      - ~/.config/jellyfin:/config
      - ~/media/tv:/data/tv
      - ~/media/movies:/data/movies
    ports:
      - 8096:8096
      - 8920:8920 #optional
      - 7359:7359/udp #optional
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://127.0.0.1:8096"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Others

  actual:
    container_name: actual
    image: docker.io/actualbudget/actual-server:latest
    ports:
      - "5006:5006"
    volumes:
      - ~/actual:/data
      - ~/.certs:/data/certs
    healthcheck:
      test: ["CMD-SHELL", "node src/scripts/health-check.js"]
      interval: 60s
      timeout: 10s
      retries: 3
      start_period: 20s
    restart: unless-stopped
